{
  "version": 3,
  "sources": ["empty-module:~/utils/db.server", "../../../app/routes/posts/index.jsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\posts\\\\\\\\index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\posts\\\\index.jsx\");\n  import.meta.hot.lastModified = \"1694301504573.562\";\n}\n// REMIX HMR END\n\nimport { Link, useLoaderData } from 'remix';\nimport { db } from '~/utils/db.server';\nexport const loader = async () => {\n  const data = {\n    posts: await db.post.findMany({\n      take: 20,\n      select: {\n        id: true,\n        title: true,\n        createdAt: true\n      },\n      orderBy: {\n        createdAt: 'desc'\n      }\n    })\n  };\n  return data;\n};\nfunction PostItems() {\n  _s();\n  const {\n    posts\n  } = useLoaderData();\n  return <>\n      <div className='page-header'>\n        <h1>Posts</h1>\n        <Link to='/posts/new' className='btn'>\n          New Post\n        </Link>\n      </div>\n      <ul className='posts-list'>\n        {posts.map(post => <li key={post.id}>\n            <Link to={post.id}>\n              <h3>{post.title}</h3>\n              {new Date(post.createdAt).toLocaleString()}\n            </Link>\n          </li>)}\n      </ul>\n    </>;\n}\n_s(PostItems, \"TAfyE0i9dyPQ7/d8lmPxXUSIugM=\", false, function () {\n  return [useLoaderData];\n});\n_c = PostItems;\nexport default PostItems;\nvar _c;\n$RefreshReg$(_c, \"PostItems\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACsBlB,gBAAmB;AAsBV;AA3CT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,0CAA4C,EAAE;AAAA,EACvF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA+B;AAC/B,cAAY,IAAI,eAAe;AACjC;AAqBA,SAAS,YAAY;AACnB,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,sFACH;AAAA,uDAAC,SAAI,WAAU,eACb;AAAA,yDAAC,QAAG,qBAAJ;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,mDAAC,QAAK,IAAG,cAAa,WAAU,OAAM,wBAAtC;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,mDAAC,QAAG,WAAU,cACX,gBAAM,IAAI,UAAQ,mDAAC,QAChB,6DAAC,QAAK,IAAI,KAAK,IACb;AAAA,yDAAC,QAAI,eAAK,SAAV;AAAA;AAAA;AAAA;AAAA,aAAgB;AAAA,MACf,IAAI,KAAK,KAAK,SAAS,EAAE,eAAe;AAAA,SAF3C;AAAA;AAAA;AAAA;AAAA,WAGA,KAJwB,KAAK,IAAd;AAAA;AAAA;AAAA;AAAA,WAKjB,CAAK,KANT;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OAdG;AAAA;AAAA;AAAA;AAAA,SAeL;AACJ;AACA,GAAG,WAAW,gCAAgC,OAAO,WAAY;AAC/D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAO,gBAAQ;AACf,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
