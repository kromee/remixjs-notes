{
  "version": 3,
  "sources": ["browser-route-module:C:\\Users\\Eduardo\\Desktop\\cursos\\remix-blog\\app\\routes\\posts\\new.jsx?browser", "../../../../app/routes/posts/new.jsx"],
  "sourcesContent": ["export { default } from \"C:\\\\Users\\\\Eduardo\\\\Desktop\\\\cursos\\\\remix-blog\\\\app\\\\routes\\\\posts\\\\new.jsx\";", "import { Link, redirect, useActionData, json } from 'remix'\nimport { db } from '~/utils/db.server'\nimport { getUser } from '~/utils/session.server'\n\nfunction validateTitle(title) {\n  if (typeof title !== 'string' || title.length < 3) {\n    return 'Title must be at least 3 characters'\n  }\n}\n\nfunction validateBody(body) {\n  if (typeof body !== 'string' || body.length < 10) {\n    return 'Body must be at least 10 characters'\n  }\n}\n\nfunction badRequest(data) {\n  return json(data, { status: 400 })\n}\n\nexport const action = async ({ request }) => {\n  const form = await request.formData()\n  const title = form.get('title')\n  const body = form.get('body')\n  const user = await getUser(request)\n\n  const fields = { title, body }\n\n  const fieldErrors = {\n    title: validateTitle(title),\n    body: validateBody(body),\n  }\n\n  if (Object.values(fieldErrors).some(Boolean)) {\n    console.log(fieldErrors)\n    return badRequest({ fieldErrors, fields })\n  }\n\n  const post = await db.post.create({ data: { ...fields, userId: user.id } })\n\n  return redirect(`/posts/${post.id}`)\n}\n\nfunction NewPost() {\n  const actionData = useActionData()\n  return (\n    <>\n      <div className='page-header'>\n        <h1>New Post</h1>\n        <Link to='/posts' className='btn btn-reverse'>\n          Back\n        </Link>\n      </div>\n\n      <div className='page-content'>\n        <form method='POST'>\n          <div className='form-control'>\n            <label htmlFor='title'>Title</label>\n            <input\n              type='text'\n              name='title'\n              id='title'\n              defaultValue={actionData?.fields?.title}\n            />\n            <div className='error'>\n              {actionData?.fieldErrors?.title ? (\n                <p\n                  className='form-validation-error'\n                  role='alert'\n                  id='title-error'\n                >\n                  {actionData.fieldErrors.title}\n                </p>\n              ) : null}\n            </div>\n          </div>\n          <div className='form-control'>\n            <label htmlFor='body'>Post Body</label>\n            <textarea\n              name='body'\n              id='body'\n              defaultValue={actionData?.fields?.body}\n            />\n            <div className='error'>\n              {actionData?.fieldErrors?.body ? (\n                <p\n                  className='form-validation-error'\n                  role='alert'\n                  id='body-error'\n                >\n                  {actionData.fieldErrors.body}\n                </p>\n              ) : null}\n            </div>\n          </div>\n          <button type='submit' className='btn btn-block'>\n            Add Post\n          </button>\n        </form>\n      </div>\n    </>\n  )\n}\n\nexport default NewPost\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AACA,gBAAmB;AACnB,qBAAwB;AAyCxB,mBAAmB;AACjB,QAAM,aAAa;AACnB,SACE,0DACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD,MAAI,aACJ,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,IAAS,WAAU;AAAA,KAAkB,UAKhD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAQ,UACvB,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,IAAG;AAAA,IACH,cAAc,YAAY,QAAQ;AAAA,MAEpC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,YAAY,aAAa,QACxB,oCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,IACL,IAAG;AAAA,KAEF,WAAW,YAAY,SAExB,QAGR,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAO,cACtB,oCAAC,YAAD;AAAA,IACE,MAAK;AAAA,IACL,IAAG;AAAA,IACH,cAAc,YAAY,QAAQ;AAAA,MAEpC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,YAAY,aAAa,OACxB,oCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,IACL,IAAG;AAAA,KAEF,WAAW,YAAY,QAExB,QAGR,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAAgB;AAAA;AAS1D,IAAO,cAAQ;",
  "names": []
}
